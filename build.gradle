/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
       id 'application' //Incluye el plugin java
       id 'org.openjfx.javafxplugin' version '0.0.9'
       id 'eclipse' 
       id 'jacoco'
}


javafx {
    version = "11.0.2"    
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

mainClassName= "gui.Main"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

sourceSets {
  main {
    resources {
        srcDirs = ["src/main/java"]
        includes = ["**/*.fxml"]
    }
  }
}


repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here. Por ejemplo 'mavenCentral()'
    mavenCentral()
}

dependencies {
	//QDOX to parse imports
	implementation("com.thoughtworks.qdox:qdox:1.12")
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit test framework
    
	testImplementation(platform('org.junit:junit-bom:5.7.0'))
	testImplementation('org.junit.jupiter:junit-jupiter')
}

/*
 * Dejamos que los test no arruinen el build, solo los errores de compilacion
 */
test {
    useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
	finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}
